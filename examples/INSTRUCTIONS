Overview

To try an ALF run, copy the appropriate template directory from the
engines directory, and copy a prep directory from the systems directory
into it. Ensure that environment variables are set correctly.



Engines

The engines directory contains
charmm
bladelib
blade
pycharmm
PottsLM
PottsPLM

The first four directories charmm, bladelib, blade, and pycharmm give
examples of running ALF using the four supported engine types. The
scripts in the PottsLM or PottsPLM directory can be copied into an
engine directory to perform the Potts analysis described in DOI:
10.1021/acs.jctc.1c00948 on systems with three or more mutating sites.
For one to ten sites, full likelihood optimization (PottsLM) is
recommended. For twenty or more sites, pseudolikelihood optimization is
recommended (PottsPLM), and for intermediate numbers of sites, either
may be appropriate.

If you have two or more sites, you may wish to account for coupling
between sites by passing the optional argument ntersite=[0,1] in runflat
and ntersite=[2,1] in postprocess. The default value is ntersite=[0,0].
The first element is a flag for whether to include coupling terms in the
lambda bias. These tend to fluctuate wildly during early flattening, and
the flag is set to 0. A flag of 1 uses several coupling biases, while
the value of 2 indicates to only use a single quadratic coupling bias.
The second element of the vector indicates whether to include 2D
profiles between sites in the profiles to be flattened. This may slow
down ALF, but is recommended if it doesn't add significant time to
benchmark runs.

To test one of these engines, make sure it is installed correctly, and
copy the corresponding directory. You may need to add commands to the
beginning of the .sh files like runflat.sh, runprod.sh, and
postprocess.sh to load the appropriate environment, or conda
environments for the molecular dynamics engine and the ALF software
package. Also ensure that the slurm options in files like subsetAll.sh
are set to appropriate partitions, accounts, and times for your cluster.



Systems

A variety of systems are available, copy one suited to your engine to a
directory named prep inside the copy of the engine directory (systems
ending in charmm are suitable for the charmm or bladelib engines,
systems ending in blade should only be used with standalone blade). Each
system will have a README describing it and the expected results
obtained from running it. Be sure to edit the enginepath line in
prep/alf_info.py to point to the pathway for the executable on your
system.



Running

Once you have set up an engine template with a system prep directory
inside, launch subsetAll.sh to submit all jobs to the queue on your
cluster, or follow the steps in subsetAll.sh to manually launch
runflat.sh, then several instances of runprod.sh, and finally
postprocess.sh with appropriate variables on your local machine. You may
need to edit the SLURMOPTS environment variables on the first few lines
of subsetAll.sh to use appropriate slurm options for your cluster.
Results will be in a file called analysis213/Result.txt. These are dG
values in kcal/mol. Note these values have little meaning until compared
to dG values in another ensemble to compute ddG.
